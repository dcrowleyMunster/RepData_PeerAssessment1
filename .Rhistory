library(ggplot2)
library(scales)
library(Hmisc)
if(!file.exists('activity.csv')){
unzip('activity.zip')
}
activityDataSrc <- read.csv('activity.csv')
dataNaData <- is.na(activityDataSrc$steps)
cleanactivityDataSrc <- activityDataSrc[!dataNaData,]
stepsDaily <- aggregate(steps ~ date, dataFile, sum, na.rm = TRUE)
stepsDaily <- aggregate(steps ~ date, activityDataSrc, sum, na.rm = TRUE)
dataNaData <- is.na(activityDataSrc$steps)
cleanactivityDataSrc <- activityDataSrc[!dataNaData,]
stepsDaily <- aggregate(steps ~ date, activityDataSrc, sum, na.rm = TRUE)
eachDayHist <- ggplot(data = na.omit(stepsDaily), aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
xlab("Total number of steps Daily") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(eachDayHist)
tepsDailyMean <- mean(stepsDaily$steps, na.rm = TRUE)
stepsDailyMean <- mean(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMean)
print(stepsDailyMean)
stepsDailyMedian <- median(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMedian)
avgStepPTimeBlk <- aggregate(x=list(meanSteps=activityDataSrc$steps), by=list(interval=activityDataSrc$interval), FUN=mean, na.rm=TRUE)
ggplot(data=avgStepPTimeBlk, aes(x=interval, y=meanSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
maxSteps <- which.max(avgStepPTimeBlk$meanSteps)
timeMxStps <-  gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", avgStepPTimeBlk[maxSteps,'interval'])
totalNas <- sum(activityDataSrcNAs)
totalNas <- sum(activityDataSrcNAs)
activityDataSrcNAs <- is.na(activityDataSrc$steps)
cleanactivityDataSrc <- activityDataSrc[!dataNaData,]
totalNas <- sum(activityDataSrcNAs)
totalNas
missingValues <- is.na(dataNaData)
table(missingValues)
imputing <- activityDataSrc
imputing$steps <- impute(activityDataSrc$steps, mean)
sum(is.na(imputing$steps))
sumImputing <- aggregate(steps ~ date, imputing, sum)
steps_Daily_M_M_Historgram <- ggplot(data = sumImputing, aes(x = Imputedsteps)) +
geom_histogram(fill = "red", binwidth = 1000) +
xlab("Total number of steps each day") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(steps_Daily_M_M_Historgram)
imputing <- activityDataSrc
imputing_steps <- impute(activityDataSrc$steps, mean)
sum(is.na(imputing_steps))
## 4 Make a histogram of the total number of steps taken each day and Calculate and report the mean and median total number of steps taken per day. Do these values differ from the estimates from the first part of the assignment? What is the impact of imputing missing data on the estimates of the total daily number of steps?
sumImputing <- aggregate(steps ~ date, imputing, sum)
steps_Daily_M_M_Historgram <- ggplot(data = sumImputing, aes(x = Imputedsteps)) +
geom_histogram(fill = "red", binwidth = 1000) +
xlab("Total number of steps each day") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(steps_Daily_M_M_Historgram)
imputing <- activityDataSrc
imputing_steps <- impute(activityDataSrc$steps, mean)
sum(is.na(imputing_steps))
sumImputing <- aggregate(steps ~ date, imputing, sum)
steps_Daily_M_M_Historgram <- ggplot(data = sumImputing, aes(x = Imputedsteps)) +
geom_histogram(fill = "red", binwidth = 1000) +
xlab("Total number of steps each day") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(steps_Daily_M_M_Historgram)
rlang::last_trace()
activityDataSrc <- read.csv('activity.csv')
activityDataSrc$date <- as.Date(as.character(dataFile$date))
activityDataSrc <- read.csv('activity.csv')
activityDataSrc$date <- as.Date(as.character(activityDataSrc$date))
activityDataSrcNAs <- is.na(activityDataSrc$steps)
cleanactivityDataSrc <- activityDataSrc[!dataNaData,]
stepsDaily <- aggregate(steps ~ date, activityDataSrc, sum, na.rm = TRUE)
eachDayHist <- ggplot(data = na.omit(stepsDaily), aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
xlab("Total number of steps Daily") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(eachDayHist)
stepsDailyMean <- mean(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMean)
stepsDailyMedian <- median(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMedian)
avgStepPTimeBlk <- aggregate(x=list(meanSteps=activityDataSrc$steps), by=list(interval=activityDataSrc$interval), FUN=mean, na.rm=TRUE)
ggplot(data=avgStepPTimeBlk, aes(x=interval, y=meanSteps)) +
geom_line() +
xlab("5-minute interval") +
ylab("average number of steps taken")
maxSteps <- which.max(avgStepPTimeBlk$meanSteps)
timeMxStps <-  gsub("([0-9]{1,2})([0-9]{2})", "\\1:\\2", avgStepPTimeBlk[maxSteps,'interval'])
timeMxStps
maxSteps <- which.max(avgStepPTimeBlk$meanSteps)
maxSteps
timeMxStps
totalNas <- sum(activityDataSrcNAs)
totalNas
missingValues <- is.na(dataNaData)
missingValues
missingValues <- is.na(dataNaData)
table(missingValues)
imputing <- activityDataSrc
imputing$steps <- impute(activityDataSrc$steps, mean)
imputing <- activityDataSrc
imputing$steps <- impute(activityDataSrc$steps, mean)
sum(is.na(imputing$steps))
sumImputing <- aggregate(steps ~ date, imputing, sum)
steps_Daily_M_M_Historgram <- ggplot(data = sumImputing, aes(x = Imputedsteps)) +
geom_histogram(fill = "red", binwidth = 1000) +
xlab("Total number of steps each day") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(steps_Daily_M_M_Historgram)
sumImputing <- aggregate(steps ~ date, imputing, sum)
names(sumImputing[1]) = "date"
names(sumImputing[2]) = "Impyted_Steps"
steps_Daily_M_M_Historgram <- ggplot(data = sumImputing, aes(x = Imputedsteps)) +
geom_histogram(fill = "red", binwidth = 1000) +
xlab("Total number of steps each day") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(steps_Daily_M_M_Historgram)
sumImputing <- aggregate(steps ~ date, imputing, sum)
names(sumImputing[1]) = "date"
names(sumImputing[2]) = "Imputedsteps"
steps_Daily_M_M_Historgram <- ggplot(data = sumImputing, aes(x = Imputedsteps)) +
geom_histogram(fill = "red", binwidth = 1000) +
xlab("Total number of steps each day") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(steps_Daily_M_M_Historgram)
sumImputing <- aggregate(steps ~ date, imputing, sum)
names(sumImputing[1]) = "date"
names(sumImputing[2]) = "Imputedsteps"
head(sumImputing, 20)
dataFile <- read.csv("activity.csv")
# Observe data using summary()
summary(dataFile)
dataFile$date <- as.Date(as.character(dataFile$date))
# Observe data again
summary(dataFile)
dataFileNAs <- is.na(dataFile$steps)
cleanDataFile <- dataFile[!dataFileNAs,]
stepsDaily <- aggregate(steps ~ date, dataFile, sum, na.rm = TRUE)
head(stepsDaily, 15)
library(ggplot2)
H1 <- ggplot(data = na.omit(stepsDaily), aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
xlab("Total number of steps Daily") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(H1)
stepsDailyMean <- mean(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMean)
stepsDailyMedian <- median(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMedian)
average <- aggregate(steps ~ interval, dataFile, mean, na.rm = TRUE)
library(ggplot2)
timePlot <- ggplot(data = average, aes(x = interval, y = steps)) +
geom_line(color = "purple") +
xlab("5-minute interval") +
ylab("Average steps") +
ggtitle("Average steps in 5-minute interval")
print(timePlot)
names(average)[1] = "Intervals"
names(average)[2] = "Average_steps"
head(average, 15)
intervalMax <- average[which.max(average$Average_steps),]
intervalMax
totalNas <- sum(dataFileNAs)
totalNas
missingValues <- is.na(dataFile)
table(missingValues)
# Replace missing data with mean of steps
# Use the Hmisc package to impute mean i.e. install.packages("Hmisc"). Then load the package.
library(Hmisc)
imputing <- dataFile
imputing$steps <- impute(dataFile$steps, mean)
sum(is.na(imputing$steps))
sumImputing <- aggregate(steps ~ date, imputing, sum)
names(sumImputing)[1] = "date"
names(sumImputing)[2] = "Imputedsteps"
head(sumImputing, 20)
opts_chunk$set(echo = true, results = TRUE, cache = TRUE)
library(ggplot2)
library(scales)
library(Hmisc)
library(knitr)
opts_chunk$set(echo = true, results = TRUE, cache = TRUE)
library(ggplot2)
library(scales)
library(Hmisc)
library(knitr)
opts_chunk$set(echo = TRUE, results = TRUE, cache = TRUE)
activityDataFile <- "activity"
if (!file.exists(activityDataFile)) {
unzip(activityDataZipFile)
}
library(ggplot2)
library(scales)
library(Hmisc)
library(knitr)
opts_chunk$set(echo = TRUE, results = TRUE, cache = TRUE)
dataFile <- read.csv("activity.csv")
# Observe data using summary()
summary(dataFile)
dataFile$date <- as.Date(as.character(dataFile$date))
# Observe data again
summary(dataFile)
dataFileNAs <- is.na(dataFile$steps)
cleanDataFile <- dataFile[!dataFileNAs,]
stepsDaily <- aggregate(steps ~ date, dataFile, sum, na.rm = TRUE)
head(stepsDaily, 15)
H1 <- ggplot(data = na.omit(stepsDaily), aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
xlab("Total number of steps Daily") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(H1)
stepsDailyMean <- mean(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMean)
stepsDailyMedian <- median(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMedian)
average <- aggregate(steps ~ interval, dataFile, mean, na.rm = TRUE)
library(ggplot2)
timePlot <- ggplot(data = average, aes(x = interval, y = steps)) +
geom_line(color = "green") +
xlab("5-minute interval") +
ylab("Average steps") +
ggtitle("Average steps in 5-minute interval")
print(timePlot)
names(average)[1] = "Intervals"
names(average)[2] = "Average_steps"
head(average, 15)
intervalMax <- average[which.max(average$Average_steps),]
intervalMax
totalNas <- sum(dataFileNAs)
totalNas
missingValues <- is.na(dataFile)
table(missingValues)
# Replace missing data with mean of steps
# Use the Hmisc package to impute mean i.e. install.packages("Hmisc"). Then load the package.
library(Hmisc)
imputing <- dataFile
imputing$steps <- impute(dataFile$steps, mean)
sum(is.na(imputing$steps))
sumImputing <- aggregate(steps ~ date, imputing, sum)
names(sumImputing)[1] = "date"
names(sumImputing)[2] = "Imputedsteps"
head(sumImputing, 20)
head(sumImputing, 20)
H2 <- ggplot(data = sumImputing, aes(x = Imputedsteps)) +
geom_histogram(fill = "red", binwidth = 1000) +
xlab("Total number of steps each day") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(H2)
# Mean of sumIputing
mean(sumImputing$Imputedsteps)
# Median of sumIputing
median(sumImputing$Imputedsteps)
imputing$dating <- ifelse(as.POSIXlt(imputing$date)$wday %in% c(0,6), "Weekend", "Weekday")
head(imputing)
#2. Make a panel plot containing a time series plot (i.e.type="l") of the 5-minute interval (x-axis) and the average number of steps taken, averaged across all weekday days or weekend days (y-axis).
meanImputing <- aggregate(steps ~ interval + dating, imputing, mean)
head(meanImputing)
panelPlot <- ggplot(data = meanImputing, aes(x = interval, y = steps)) +
geom_line(color = "gold") +
facet_grid(dating ~ .) +
xlab("5-minute interval") +
ylab("Average steps") +
ggtitle("Average steps in 5-minute interval")
print(panelPlot)
library(ggplot2)
library(scales)
library(Hmisc)
library(knitr)
opts_chunk$set(echo = TRUE, results = TRUE, cache = TRUE)
## What is mean total number of steps taken per day?
#1. Calculate the total number of steps taken per day
# Read data into object variable excelDataSourceFile
excelDataSourceFile <- read.csv("activity.csv")
excelDataSourceFile$date <- as.Date(as.character(excelDataSourceFile$date))
excelDataSourceFileNAs <- is.na(excelDataSourceFile$steps)
cleanexcelDataSourceFile <- excelDataSourceFile[!excelDataSourceFileNAs,]
stepsDaily <- aggregate(steps ~ date, excelDataSourceFile, sum, na.rm = TRUE)
print(stepsDaily)
totStepsPerDayHistogram <- ggplot(data = na.omit(stepsDaily), aes(x = steps)) +
geom_histogram(fill = "green", binwidth = 1000) +
xlab("Total number of steps Daily") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(totStepsPerDayHistogram)
#3. Calculate and report the mean and median of the total number of steps taken per day
stepsDailyMean <- mean(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMean)
stepsDailyMedian <- median(stepsDaily$steps, na.rm = TRUE)
print(stepsDailyMedian)
average <- aggregate(steps ~ interval, excelDataSourceFile, mean, na.rm = TRUE)
library(ggplot2)
timePlot <- ggplot(data = average, aes(x = interval, y = steps)) +
geom_line(color = "green") +
xlab("5-minute interval") +
ylab("average steps") +
ggtitle("average steps in 5-minute interval")
print(timePlot)
names(average)[1] = "Intervals"
names(average)[2] = "Average_steps"
head(average, 15)
intervalMax <- average[which.max(average$Average_steps),]
intervalMax
totalNas <- sum(excelDataSourceFileNAs)
totalNas
missingValues <- is.na(excelDataSourceFile)
table(missingValues)
# Replace missing data with mean of steps
# Use the Hmisc package to impute mean i.e. install.packages("Hmisc"). Then load the package.
library(Hmisc)
imputing <- excelDataSourceFile
imputing$steps <- impute(excelDataSourceFile$steps, mean)
sum(is.na(imputing$steps))
sumImputing <- aggregate(steps ~ date, imputing, sum)
names(sumImputing)[1] = "date"
names(sumImputing)[2] = "Imputedsteps"
head(sumImputing, 20)
H2 <- ggplot(data = sumImputing, aes(x = Imputedsteps)) +
geom_histogram(fill = "red", binwidth = 1000) +
xlab("Total number of steps each day") +
ylab("Frequency") +
ggtitle("Histogram of the Total Number of Steps Taken Each Day")
print(H2)
mean(sumImputing$Imputedsteps)
# Median of sumIputing
median(sumImputing$Imputedsteps)
imputing$dating <- ifelse(as.POSIXlt(imputing$date)$wday %in% c(0,6), "Weekend", "Weekday")
head(imputing)
meanImputing <- aggregate(steps ~ interval + dating, imputing, mean)
head(meanImputing)
panelPlot <- ggplot(data = meanImputing, aes(x = interval, y = steps)) +
geom_line(color = "gold") +
facet_grid(dating ~ .) +
xlab("5-minute interval") +
ylab("average steps") +
ggtitle("average steps in 5-minute interval")
print(panelPlot)
